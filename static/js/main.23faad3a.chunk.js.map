{"version":3,"sources":["Header/Header.js","Utils.js","PlayerProfile/PlayerProfile.js","LeaderLadder/LeaderLadder.js","PageContent/PageContent.js","HomeContent/HomeContent.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","target","href","React","Component","KFACTOR","createPlayers","playerNames","matches","playerDict","forEach","playerName","ELO","wins","losses","transFormMatchForPlayer","match","date","Date","won","Winner","location","Location","opponent","Loser","length","players","i","push","adjustedELOS","aELO","bELO","didAWin","k","adjustedRatingA","Math","pow","adjustedRatingB","ELOCalc","dateString","toISOString","Object","keys","playersArray","map","name","playerObject","console","log","sort","a","b","PlayerProfile","this","props","player","round","src","getProfileURL","height","width","getRecord","getRating","index","key","LeaderLadder","state","selectedPlayer","prevProps","setState","onClick","PageContent","d3","then","getContent","path","params","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23faad3a.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nclass Header extends React.Component {\n   \n    render () {\n        return (<div className=\"header\">\n            <div className=\"headerText\">Table tenniS Insights (TSI)</div>\n            <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1sF6K5eoTMGjo07zJKPZMnWw_B3yIk6WU5F6Ud56PVTs/edit?usp=sharing\">\n                <button>Record a match!</button>\n            </a>\n        </div>);\n    }\n}\n\nexport default Header;","const KFACTOR = 50;\n\nexport function createPlayers (playerNames, matches) {\n\n    let playerDict = {};\n    playerNames.forEach((playerName) => {\n        playerDict[playerName] = {\n            matches: [],\n            ELO: 1500,\n            wins: 0,\n            losses: 0\n        }\n    });\n\n\n    let ELOCalc = (aELO, bELO, didAWin, k) => {\n        let adjustedRatingA = Math.pow(10, aELO/400);\n        let adjustedRatingB = Math.pow(10, bELO/400);\n\n        let expectedScoreA =  adjustedRatingA / (adjustedRatingA + adjustedRatingB);\n        let expectedScoreB =  adjustedRatingB / (adjustedRatingA + adjustedRatingB);\n\n        let outcomeA = didAWin ? 1 : 0;\n        let outcomeB = didAWin ? 0 : 1;\n\n        return {\n            aELO: aELO + k * (outcomeA - expectedScoreA),\n            bELO: bELO + k * (outcomeB - expectedScoreB)\n        }\n    }\n\n    let transFormMatchForPlayer = (match, playerName) => {\n        return {\n            date: match.Date,\n            won: match.Winner === playerName,\n            location: match.Location,\n            opponent: match.Winner === playerName ? match.Loser : match.Winner\n        }\n    }\n\n    if (matches && matches.length !== 0) {\n        let players = {};\n        playerNames.forEach((playerName) => {\n            players[playerName] = {'': {}};            \n        });\n\n        matches.forEach((match, i) => {\n            if (match.Winner in playerDict && match.Loser in playerDict) {\n                playerDict[match.Winner].wins += 1;\n                playerDict[match.Winner].matches.push(transFormMatchForPlayer(match, match.Winner));\n                playerDict[match.Loser].losses += 1;\n                playerDict[match.Loser].matches.push(transFormMatchForPlayer(match, match.Loser));\n\n\n                let adjustedELOS = ELOCalc(playerDict[match.Winner].ELO, playerDict[match.Loser].ELO, true, KFACTOR);\n                playerDict[match.Winner].ELO = adjustedELOS.aELO;\n                playerDict[match.Loser].ELO = adjustedELOS.bELO;\n            }\n\n            if (i === matches.length - 1 || match.Date !== matches[i+1].Date) {\n                let dateString = (new Date(match.Date)).toISOString();\n                Object.keys(playerDict).forEach((playerName, i) => {\n                    players[playerName][''][dateString] = {'elo': playerDict[playerName].ELO};\n                });\n            }\n        });\n        let playersArray = Object.keys(players).map((name) => {\n            let playerObject = {};\n            playerObject[name] = players[name];\n            return playerObject;\n        });\n        console.log(playersArray);\n    }\n\n\n    return Object.keys(playerDict).map((playerName) => {\n        return {...playerDict[playerName], name: playerName};\n    }).sort((a, b) => {\n        if (a.ELO < b.ELO) {\n            return 1;\n        }\n        if (a.ELO > b.ELO) {\n            return -1;\n        }\n        return 0;\n    });\n}\n\n","import React from 'react';\nimport './PlayerProfile.css';\nimport * as d3 from 'd3';\n\n// props - players, matches, playerName\n\nclass PlayerProfile extends React.Component {\n    constructor () {\n        super();\n    }\n\n    getRecord () {\n        return this.props.player.wins + '-' + this.props.player.losses\n    }\n\n    getRating () {\n        return Math.round(this.props.player.ELO);\n    }\n\n    getProfileURL (player = {}) {\n        let name = 'default';\n        switch (player.name) {\n            case 'Karthik' : \n                name = 'Karthik';\n                break;\n            case 'Irem' : \n                name = 'Irem';\n                break;\n            case 'Nick' : \n                name = 'Nick';\n                break;\n            case 'Matt' : \n                name = 'Matt';\n                break;\n            default:\n                break;\n        }\n        return 'images/profilePics/' + name + '.png';\n    }\n\n    render () {\n        return (\n            <div className=\"playerProfile\">\n                <div className=\"playerHeader\">\n                    <img src={this.getProfileURL(this.props.player)} height='120' width='120'/>\n                    <div className='playerBio'>\n                        <div className=\"playerName\">{this.props.player.name}</div>\n                        <div className=\"playerStats\">  \n                            <span className=\"playerRecord\">{this.getRecord()}</span>\n                            <span className=\"playerRanking\">Rating: {this.getRating()}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"playerContent\">\n                    <div className=\"matchHistory\">\n                        <div className=\"matchHistoryTitle tableHeader\">\n                            Match History\n                        </div>\n\n                        <table className='matchHistoryTable'><tbody>\n                        <tr className=\"headerRow\">\n                            <th></th>\n                            <th>Date</th>\n                            <th>Opponent</th>\n                            <th>Result</th>\n                        </tr>\n                        {this.props.player.matches.map((match, index) =>\n                            <tr key={index}>\n                                <td>{index + 1}</td>\n                                <td>{match.date}</td>\n                                <td>{match.opponent}</td>\n                                <td>{match.won ? 'W' : 'L'}</td>\n                        </tr>)}\n                    </tbody></table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PlayerProfile;","import React from 'react';\nimport './LeaderLadder.css';\nimport { createPlayers } from '../Utils';\nimport * as d3 from 'd3';\nimport PlayerProfile from '../PlayerProfile/PlayerProfile';\n\nconst matchesLink = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vSBuLnOBXaX9mXTc08tcMnH5eLxt8VuLGf4a0SGouikhwKnfUxp6Kjo0hYa3QONBjfSS-oAEiL3TXX9/pub?gid=0&single=true&output=csv'\n\nclass LeaderLadder extends React.Component {\n    constructor () {\n        super();\n\n\n        this.state = {\n            selectedPlayer: null,\n            players: []\n        }\n    }\n\n    componentDidUpdate (prevProps) {\n        if (prevProps.players !== this.props.players || prevProps.matches !== this.props.matches) {\n            let players = createPlayers(this.props.players, this.props.matches);\n\n            if (players.length) {\n                this.setState({players: players, selectedPlayer: players[0]});\n            }    \n        }\n    }\n\n    render () {\n        return (\n            <div className=\"leaderLadder\">\n                {this.state.selectedPlayer !== null ? <PlayerProfile player={this.state.selectedPlayer} /> : ''}\n                <div className=\"ladder\">\n                    <div className=\"leaderLadderHeader\">\n                        Leader Ladder\n                    </div>\n                    <table className='leadersTable'><tbody>\n                        <tr className=\"headerRow\">\n                            <th></th>\n                            <th>Name</th>\n                            <th>Rating</th>\n                            <th>Record</th>\n                        </tr>\n                        {this.state.players.map((playerObject, index) =>\n                            <tr key={index} className={this.state.selectedPlayer.name === playerObject.name ? 'selectedPlayer' : ''} onClick={() => this.setState({selectedPlayer: playerObject})}>\n                                <td>{index + 1}</td>\n                                <td >{playerObject.name}</td>\n                                <td>{Math.round(playerObject.ELO)}</td>\n                                <td>{playerObject.wins + ' - ' + playerObject.losses}</td>\n                        </tr>)}\n                    </tbody></table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LeaderLadder;","import React from 'react';\nimport './PageContent.css';\nimport LeaderLadder from './../LeaderLadder/LeaderLadder.js';\nimport HomeContent from './../HomeContent/HomeContent.js';\nimport * as d3 from 'd3';\n\nconst matchesLink = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vSBuLnOBXaX9mXTc08tcMnH5eLxt8VuLGf4a0SGouikhwKnfUxp6Kjo0hYa3QONBjfSS-oAEiL3TXX9/pub?gid=0&single=true&output=csv'\nconst localLink = 'matchHistory.csv';\n\nclass PageContent extends React.Component {\n\n    constructor () {\n        super();\n        this.state = {\n            matches: [],\n            players: ['Irem', 'Nick', 'Matt', 'Karthik', 'Sandip', 'Sai', 'Ellick', 'Abinav']\n        }\n    }\n\n    componentDidMount () {\n        d3.csv(matchesLink).then((matches) => {\n            this.setState({matches: matches});\n        });\n    }\n   \n    render () {\n        return (\n            <div className=\"pageContent\">\n                {this.getContent(this.props.path, this.props.params)}\n            </div>  \n        );\n    }\n\n    getContent (path = 'home', params = null) {\n        if (path === 'home') {\n            return (<div className=\"homePageLayout\">\n                {/* <HomeContent/> */}\n                <LeaderLadder players={this.state.players} matches={this.state.matches}/>\n            </div>);\n        }\n        return <div></div>\n    }\n}\n\nexport default PageContent;","import React from 'react';\nimport './HomeContent.css';\n\nclass HomeContent extends React.Component {\n   \n    render () {\n        return (<div className=\"homeContent\">\n        <div className=\"greetingText\">\n            <h3>Welcome to the TSI table tennis website!</h3>\n            <p>Use this page to check on rankings and any information about past or future tournaments</p>\n        </div>\n            <div className=\"contentBox\">\n                <div className=\"contentHeader\">\n                    Update 1 - TSI's first tournament, Ben's dominance\n                </div>\n                <div className=\"contentMain\">\n                    August 23rd 2019 marked the first TSI tournament. Strong showings by Sai and Matt were stifled by an absolutely dominant performance from Ben, who claimed victory with relative ease.\n                </div>\n                <div className=\"contentPhotoContainer\">\n                \n                    <img src={process.env.PUBLIC_URL + '/images/Tournament1Outcome.JPG'}></img>\n                </div>\n            </div>  \n        </div>);\n    }\n}\n\nexport default HomeContent;","import React from 'react';\nimport './App.css';\nimport Header from './Header/Header.js';\nimport PageContent from './PageContent/PageContent.js';\n\nclass App extends React.Component {\n\n  render () { return  (\n    <div className=\"App\">\n      <Header/>\n      <PageContent path='home'/>\n    </div>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}